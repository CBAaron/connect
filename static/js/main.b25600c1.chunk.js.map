{"version":3,"sources":["context/web3.js","hooks/useRegistry.js","utils/providerUrl.js","app.js","index.js"],"names":["disconnectWeb3","a","console","log","defaultState","Object","freeze","data","error","undefined","loading","formatProviderUrl","walletService","universalLink","universal","native","App","useState","modalVisible","setModalVisible","connectRef","useRef","handleConnect","useCallback","connector","WalletConnect","bridge","qrcodeModal","open","close","current","connected","createSession","on","payload","params","React","state","setState","useEffect","fetch","result","json","values","useMobileRegistry","View","style","styles","app","ScrollView","header","Text","title","Button","onPress","color","Modal","visible","filter","f","mobile","map","name","TouchableOpacity","key","width","uri","encodeURIComponent","window","ReactNativeWebView","postMessage","handleProviderUrl","padding","renderModal","StyleSheet","create","marginHorizontal","maxWidth","logo","height","fontWeight","fontSize","marginVertical","textAlign","text","lineHeight","link","code","fontFamily","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.b25600c1.chunk.js","sourcesContent":["// import React from 'react'\n// import WalletConnect from \"@walletconnect/client\";\n// import QRCodeModal from \"@walletconnect/qrcode-modal\";\nimport { View, Text } from \"react-native\";\n\n// import WalletConnectProvider from '@walletconnect/web3-provider'\n// import { providers } from 'ethers'\n// import WalletLink from 'walletlink'\n// import Web3Modal from 'web3modal'\n\n// const INFURA_ID = '460f40a260564ac4a4f4b3fffb032dad'\n\n// const providerOptions = {\n//   walletconnect: {\n//     package: WalletConnectProvider, // required\n//     options: {\n//       infuraId: INFURA_ID, // required\n//     },\n//   },\n//   'custom-walletlink': {\n//     display: {\n//       logo: 'https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0',\n//       name: 'Coinbase',\n//       description: 'Connect to Coinbase Wallet (not Coinbase App)',\n//     },\n//     options: {\n//       appName: 'Coinbase', // Your app name\n//       networkUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n//       chainId: 1,\n//     },\n//     package: WalletLink,\n//     connector: async (_, options) => {\n//       const { appName, networkUrl, chainId } = options\n//       const walletLink = new WalletLink({\n//         appName,\n//       })\n//       const provider = walletLink.makeWeb3Provider(networkUrl, chainId)\n//       await provider.enable()\n//       return provider\n//     },\n//   },\n// }\n\n// let web3Modal;\n// let provider;\n\n// if (typeof window !== 'undefined') {\n//   web3Modal = new Web3Modal({\n//     network: 'mainnet', // optional\n//     cacheProvider: true,\n//     providerOptions, // required\n//   })\n// }\n\n// const connectWeb3 = async function() {\n//   // const provider = await web3Modal.connect();\n//   // console.log(provider)\n//   //  // We plug the initial `provider` into ethers.js and get back\n//   //  // a Web3Provider. This will add on methods from ethers.js and\n//   //  // event listeners such as `.on()` will be different.\n//   //  const web3Provider = new providers.Web3Provider(provider)\n\n//   //  const signer = web3Provider.getSigner()\n//   //  const address = await signer.getAddress()\n\n//   //  const network = await web3Provider.getNetwork()\n   \n//   //  console.log({ provider, web3Provider, network, address });\n   \n//   //  return { provider, web3Provider, network, address };\n\n//   const connector = new WalletConnect({\n//     bridge: \"https://bridge.walletconnect.org\", // Required\n//     qrcodeModal: QRCodeModal, //() => <View style={{flex:1, backgroundColor: 'red'}}><Text>test UI</Text></View>,\n//   });\n\n//   if (!connector.connected) {\n//     // create new session\n//     connector.createSession();\n//   }\n\n//   console.log(connector);\n// };\n\nconst disconnectWeb3 = async function () {\n  // await web3Modal.clearCachedProvider()\n  // if (provider?.disconnect && typeof provider.disconnect === 'function') {\n  //   await provider.disconnect()\n  // }\n  console.log('dis')\n};\n\nexport { disconnectWeb3 }\n","import React from \"react\";\n\nconst defaultState = Object.freeze({\n  data: [],\n  error: undefined,\n  loading: true,\n});\n\nconst useMobileRegistry = () => {\n  const [state, setState] = React.useState(defaultState);\n  React.useEffect(() => {\n    (async () => {\n      try {\n        const result = await fetch(\n          \"https://registry.walletconnect.org/data/wallets.json\"\n        );\n        const data = await result.json();\n        setState({\n          data: Object.values(data),\n          error: undefined,\n          loading: false,\n        });\n      } catch (error) {\n        console.error(error);\n        setState({ ...defaultState, error: error, loading: false });\n      }\n    })();\n  }, [setState]);\n  return state;\n};\n\nexport { useMobileRegistry };\n","// import { Platform } from \"react-native\";\n\nconst formatProviderUrl = (walletService) => {\n\n    const { universal: universalLink, native: deepLink } = walletService;\n    \n    // if (Platform.OS === \"android\") {\n    //     return `${deepLink}`;\n    // }\n    \n    return `${universalLink}`;\n}\n\nexport {formatProviderUrl}","import React, {useCallback, useState, useRef} from \"react\";\nimport { Button, StyleSheet, Text, View, Modal } from \"react-native\";\nimport { connectWeb3, disconnectWeb3 } from \"./context/web3\";\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\nimport { useMobileRegistry } from \"./hooks/useRegistry\";\nimport { formatProviderUrl } from \"./utils/providerUrl\";\nimport { ScrollView, TouchableOpacity } from \"react-native-web\";\n\nconst logoUri = `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\"><g fill=\"#61DAFB\"><path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\" /><circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\" /><path d=\"M520.5 78.1z\" /></g></svg>`;\n\nfunction Link(props) {\n  return (\n    <Text\n      {...props}\n      accessibilityRole=\"link\"\n      style={StyleSheet.compose(styles.link, props.style)}\n    />\n  );\n}\n\nfunction App() {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [add, setAdd] = useState('test');\n  const connectRef = useRef(null)\n\n  const handleConnect = useCallback(async() => {\n    // const {address} = await connectWeb3();\n    // setAdd(address.toString());\n    // setModalVisible(true)\n    const connector = new WalletConnect({\n      bridge: \"https://bridge.walletconnect.org\", // Required\n      qrcodeModal: {\n        open: () => setModalVisible(true),\n        close: () => setModalVisible(false),\n      }\n    });\n\n    // const { accounts, chainId } = await connector.connect();\n\n    // console.log({accounts, chainId})\n\n    connectRef.current = connector;  \n\n    setModalVisible(true)\n\n  \n    if (!connector.connected) {\n      // create new session\n      connector.createSession();\n    }\n\n    connector.on(\"connect\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      console.log(payload.params[0])\n    });\n  }, [])\n\n  const handleDisconnect = useCallback(() => {\n    disconnectWeb3();\n    setModalVisible(false)\n  }, [])\n\n  const { data } = useMobileRegistry();\n\n  \n  const handleProviderUrl = (mobile) => {\n    const { uri } = connectRef.current;\n\n\n    console.log({uri})\n    \n    const redirectUrl = 'coinbase://';\n\n    console.log(`${formatProviderUrl(mobile)}/wc?uri=${encodeURIComponent(uri)}&redirectUrl=${redirectUrl}`)\n\n    if (window.ReactNativeWebView) {\n      window.ReactNativeWebView.postMessage(`${formatProviderUrl(mobile)}/wc?uri=${encodeURIComponent(uri)}${redirectUrl}`);\n    }\n  }\n\n  const renderModal = (data) => {    \n    return (\n      <Modal visible={modalVisible}>\n        <Button onPress={() => setModalVisible(false)} title=\"close\" />\n        {data.filter(f => !!f.mobile.universal).map(({name, mobile}) => <TouchableOpacity key={name} style={{width: 100}} onPress={() => handleProviderUrl(mobile)}><Text style={{padding: 10}} >{name}</Text></TouchableOpacity>)}\n      </Modal>\n    );\n  }\n\n  return (\n    <View style={styles.app}>\n      <ScrollView>\n      <View style={styles.header}>\n        <Text style={styles.title}>Connect Self hosted wallet</Text>\n      </View>\n      </ScrollView>\n      <Button onPress={handleConnect} title=\"Connect\" color={\"green\"}/>\n      {modalVisible && renderModal(data)}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  app: {\n    marginHorizontal: \"auto\",\n    maxWidth: 500\n  },\n  logo: {\n    height: 80\n  },\n  header: {\n    padding: 20\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: \"1.5rem\",\n    marginVertical: \"1em\",\n    textAlign: \"center\"\n  },\n  text: {\n    lineHeight: \"1.5em\",\n    fontSize: \"1.125rem\",\n    marginVertical: \"1em\",\n    textAlign: \"center\"\n  },\n  link: {\n    color: \"#1B95E0\"\n  },\n  code: {\n    fontFamily: \"monospace, monospace\"\n  }\n});\n\nexport { App };\n\n","import { AppRegistry } from \"react-native\";\nimport {App}  from \"./app.js\";\n\nAppRegistry.registerComponent(\"App\", () => App);\n\nAppRegistry.runApplication(\"App\", {\n  rootTag: document.getElementById(\"root\")\n});\n\n"],"sourceRoot":""}